/*
    baseVars defines values that are used throughout the 
    application's type system.

    We will set variables for:
    App Sizing within the browser window.
    Base color palettes
    Base level typography settings

    StyleSheet files that inherit or import these values
    CAN alter them into new variables to create variations
    of these basic values.
*/
@import "baseVars.css";
@import "baseVars.css";
@import "baseVars.css";
:root {
  /* 
      Set the base sizing values used to place the app 
      elements within the browser window.
  */
  --app-height: 100dvh;
  --app-width: 100dvw;
  /* Define the font families, base size, and weight variables */
  --font-set: "Helvetica Neue", Helvetica, Arial, sans-serif;
  --font-set-2: Georgia, "Times New Roman", Times, serif;
  /* 
      I really wanted to use 12, so that I'd have even 
      thirds, halves, and quarters, but then I'd have to
      use something other than 1rem for standard text, and 
      adjust from there.

      Adding the burden of remembering to account for that
      throughout wasn't worth the flexibility to me.
  */
  --font-base-size: 16px;
  --font-weight-light: 200;
  --font-weight-base: 400;
  --font-weight-emphasized: 450;
  --font-weight-bold: 700;
  --font-weight-heavy: 900;
}

html {
  font-family: var(--font-set);
  font-size: var(--font-base-size);
  font-weight: var(--font-weight-base);
}

.feature-host heading {
  font-size: 1.5rem;
  font-weight: var(--font-weight-heavy);
}

.task-host heading {
  font-size: 1.25rem;
  font-weight: var(--font-weight-bold);
}

.task-host main heading {
  font-size: 1.1rem;
  font-weight: var(--font-weight-emphasized);
}

a {
  text-decoration: none;
}

#SleepyKitty {
  width: 400px;
  height: 255px;
  background-image: url("images/sleepyKitty.svg");
  background-size: 200px;
  background-repeat: no-repeat;
  background-position: center;
  display: block;
  min-height: 255px;
  position: relative; /* Add this to position the pseudo-element */
  overflow: hidden;
}

#SleepyKitty::before {
  content: "z";
  position: absolute;
  bottom: 60%;
  left: 30%;
  font-size: 24px;
  color: #333;
  opacity: 0;
  text-shadow: -0.5em -0.5em 0 #aaa, -1em 1em 0 #aaa;
  animation: float-fade-sway 3s ease-in-out infinite;
  pointer-events: none;
  z-index: 1;
}

.pulse {
  animation: pulse-opacity 3s ease-in-out infinite;
}

@keyframes pulse-opacity {
  0% {
    opacity: 0.1;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.1;
  }
}
@keyframes float-fade-sway {
  0% {
    bottom: 60%;
    left: 30%;
    opacity: 0;
  }
  20% {
    opacity: 0.5;
    left: 28%;
  }
  40% {
    opacity: 1;
    left: 32%;
  }
  60% {
    left: 28%;
  }
  80% {
    left: 32%;
    opacity: 0.5;
  }
  100% {
    bottom: 80%;
    left: 30%;
    opacity: 0;
  }
}
#BlinkyKitty {
  width: 400px;
  height: 255px;
  background-image: url("images/kitty.svg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  animation: blink-animation 5s steps(1, end) infinite;
}

@keyframes blink-animation {
  0%, 10%, 12%, 86%, 90%, 94%, 98%, 100% {
    background-image: url("images/kitty.svg");
  }
  11%, 88%, 96% {
    background-image: url("images/kittyblink.svg");
  }
}
body {
  padding: 0;
  margin: 0;
  height: var(--app-height);
  width: var(--app-width);
  display: flex;
  flex-direction: column;
}

body > footer {
  display: none;
}

.app-host {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: auto;
  height: 100%;
  width: 100%;
}

.app-host > header {
  margin: 0;
  padding: 0.75rem;
  display: flex;
  flex-direction: column;
  justify-items: center;
}

.app-host > main {
  flex: 1;
  overflow: auto;
}

.feature-host {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  height: 100%;
  padding: 0.25rem 0.5rem;
  position: relative;
}

.feature-host header {
  flex: 0 0 auto;
  margin: 0;
  position: sticky;
  border-bottom: solid 1px black;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.feature-host main {
  flex: 1;
  overflow: auto;
}

main .centered-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.feature-host footer {
  flex: 0 0 auto;
  margin-top: auto;
  border-top: solid 1px black;
}

.task-host {
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: 0.25rem 0.5rem;
}

.task-host > header {
  flex: 0 0 auto;
  margin: 0;
  border-bottom: solid 1px black;
}

.task-host > main {
  flex: 1;
  overflow: auto;
  height: 100%;
}

.task-host > footer {
  flex: 0 0 auto;
  margin-top: auto;
  border-top: solid 1px black;
  padding: 0.5rem 1rem;
}

.task-host > footer nav {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  gap: 0.25rem;
}

.task-host > footer nav button {
  flex: 1 0 auto;
}

.hidden {
  /*height: 0;
  visibility: hidden;*/
  display: none;
}

@media only screen and (min-width: 600px) {
  body > footer {
    display: unset;
    margin-top: auto;
    border-top: solid 1px black;
  }
  .app-host {
    flex-direction: row;
  }
}
